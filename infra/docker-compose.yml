version: '3.9'
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-foodsafe}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports: ['6379:6379']

  minio:
    image: quay.io/minio/minio:RELEASE.2024-08-17T01-24-54Z
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ['2181:2181']

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper]
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on: [kafka]
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    ports: ['8080:8080']

  api-gateway:
    build:
      context: ..
      dockerfile: services/api-gateway/Dockerfile
    environment:
      PORT: 3000
    ports: ['3300:3000']
    depends_on: [postgres, redis, kafka]

  school-integration:
    build:
      context: ..
      dockerfile: services/school-integration-service/Dockerfile
    environment:
      PORT: 4001
      MEGO_BASE_URLS: ${MEGO_BASE_URLS:-http://host.docker.internal:4003}
      EQUIPMENT_CODE: ${EQUIPMENT_CODE:-DEMO-EC-0001}
    ports: ['4001:4001']

  regulator-service:
    build:
      context: ..
      dockerfile: services/regulator-service/Dockerfile
    environment:
      PORT: 4002
    ports: ['4002:4002']

  user-service:
    build:
      context: ..
      dockerfile: services/user-service/Dockerfile
    environment:
      PORT: 3101
    ports: ['3101:3101']
    depends_on: [postgres]

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '80:80'
    depends_on: [api-gateway]

volumes:
  pgdata:
  minio:
